# Marzneshin Configuration

# Database Configuration
SQLALCHEMY_DATABASE_URL=sqlite:///db.sqlite3
SQLALCHEMY_CONNECTION_POOL_SIZE=10
SQLALCHEMY_CONNECTION_MAX_OVERFLOW=-1

# Server Configuration
UVICORN_HOST=0.0.0.0
UVICORN_PORT=8000
UVICORN_UDS=
UVICORN_SSL_CERTFILE=
UVICORN_SSL_KEYFILE=

# Multi-Core Processing Configuration
# Number of worker processes to use for handling requests
# Auto-calculated based on CPU cores: (2 * CPU cores) + 1, max 8
# Set to 1 for single-core operation or debugging
# Set to specific number to override auto-calculation
UVICORN_WORKERS=

# Development Configuration
DEBUG=false
DOCS=false

# Dashboard Configuration
DASHBOARD_PATH=/dashboard/
VITE_BASE_API=/api/

# Subscription Configuration
SUBSCRIPTION_URL_PREFIX=

# Telegram Notifications
TELEGRAM_API_TOKEN=
TELEGRAM_ADMIN_ID=
TELEGRAM_PROXY_URL=
TELEGRAM_LOGGER_CHANNEL_ID=0

# Task Intervals (in seconds)
TASKS_RECORD_USER_USAGES_INTERVAL=30
TASKS_REVIEW_USERS_INTERVAL=180
TASKS_EXPIRE_DAYS_REACHED_INTERVAL=600
TASKS_RESET_USER_DATA_USAGE=0

# JWT Configuration
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=0

# WEBHOOKS
WEBHOOK_ADDRESS=
WEBHOOK_SECRET=

# Performance Optimization Notes:
# - For high-traffic deployments, increase UVICORN_WORKERS to utilize all CPU cores
# - Monitor memory usage when increasing workers (each worker uses additional RAM)
# - For single-core VPS, keep UVICORN_WORKERS=1
# - For multi-core servers, let the system auto-calculate or set manually
# - Example: 4-core server â†’ set UVICORN_WORKERS=9 (2*4+1) or leave empty for auto
